package com.frysning.springdnd.conditions;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.core.convert.converter.Converter;import org.springframework.stereotype.Component;import java.util.Optional;@Componentpublic class ConditionByIdConverter implements Converter<String, Condition> {    private final ConditionRepository conditionRepository;    @Autowired    public ConditionByIdConverter(ConditionRepository conditionRepository) {        this.conditionRepository = conditionRepository;    }    @Override    public Condition convert(String id) {        System.out.println("Condition ID: " + id);        Long longId = Long.parseLong(id);        Optional<Condition> optionalCondition = conditionRepository.findById(longId);        System.out.println("Condition is found: " + optionalCondition.isPresent());        return optionalCondition.orElse(new Condition());    }}