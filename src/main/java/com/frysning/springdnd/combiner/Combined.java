package com.frysning.springdnd.combiner;import com.fasterxml.jackson.annotation.JsonIgnore;import com.frysning.springdnd.actions.CalculatedAction;import com.frysning.springdnd.enemies.Enemy;import com.frysning.springdnd.race.Race;import com.frysning.springdnd.stats.ReadableStats;import com.frysning.springdnd.stats.Stat;import java.util.List;import java.util.stream.Collectors;public record Combined(Enemy enemy, Race race) {    @Override    @JsonIgnore    public Enemy enemy() {        return enemy;    }    @Override    @JsonIgnore    public Race race() {        return race;    }    public String getName() {        return enemy.getName();    }    public String getRaceName() {        return race.getName();    }    public String getRaceType() {        return enemy.getRaceType().getName();    }    public ReadableStats getBaseStats() {        return enemy.getBaseStats();    }    public Stat getRacialStats() {        return race.getStat();    }    public ReadableStats getCombinedStats() {        return new ReadableStats(enemy.getStat(), race.getStat());    }    public List<CalculatedAction> getCalculatedAction() {        return enemy.getActions().stream()            .map(                action -> new CalculatedAction(action, getCombinedStats(),                    enemy.getProficiencyBonus()))            .collect(                Collectors.toList());    }}