package com.frysning.springdnd.combiner;import com.frysning.springdnd.enemies.Enemy;import com.frysning.springdnd.enemies.EnemyNotFoundException;import com.frysning.springdnd.enemies.EnemyRepository;import com.frysning.springdnd.race.Race;import com.frysning.springdnd.race.RaceNotFoundException;import com.frysning.springdnd.race.RaceRepository;import org.springframework.hateoas.EntityModel;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestController@RequestMapping("combine")public class CombinerController {    private final EnemyRepository enemyRepository;    private final RaceRepository raceRepository;    private final CombinedModelAssembler combinedModelAssembler;    CombinerController(EnemyRepository enemyRepository, RaceRepository raceRepository,        CombinedModelAssembler combinedModelAssembler) {        this.enemyRepository = enemyRepository;        this.raceRepository = raceRepository;        this.combinedModelAssembler = combinedModelAssembler;    }    @RequestMapping("/{enemyId}/{raceId}")    EntityModel<Combined> one(@PathVariable Long enemyId, @PathVariable Long raceId) {        Enemy enemy = enemyRepository.findById(enemyId) //            .orElseThrow(() -> new EnemyNotFoundException(enemyId));        Race race = raceRepository.findById(raceId) //            .orElseThrow(() -> new RaceNotFoundException(raceId));        Combined combined = new Combined(enemy, race);        return combinedModelAssembler.toModel(combined);    }}